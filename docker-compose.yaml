version: "3.2"
services:
  db:
    image: mysql:8
    restart: always
    volumes:
      - ${dbPath}:/data
      - ${dbPath}/${dbFileName}:/docker-entrypoint-initdb.d/init.sql:ro
      # Incluir la siguiente línea si se quieren conservar los cambios en la base de datos para la próxima vez que se quiera lanzar el docke compose
      # Cuando se vuelva a poner en marcha por segunda vez pasa de la inicialización de initial.sql
      # Si se quiere inicializar de nuevo hay que eliminar el volumen con: docker volume rm dockerizeSpringBoot_mysql_data
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${dbPass}
      MYSQL_DATABASE: ${dbName}
    # command: --init-file /data/${dbFileName}
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u ${dbUser} --password=${dbPass} 
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 20

  java:
    image: example/java
    build: ./java
    command: "java -jar ${appJava}"
    ports:
      - ${portJava}:8080
    volumes:
      - ${javaPath}:/app
    depends_on:
      db:
        condition: service_healthy

  angular:
    image: httpd
    ports:
      - ${portAngular}:80
    volumes:
      - ${angularPath}:/usr/local/apache2/htdocs/
      # Configuración de apache para que sirva correctamente httpd
      - ./httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf
      

  adminer:
    image: adminer
    restart: always
    ports:
      - ${portAdminer}:8080

  proxy:
    image: example/proxy
    build: ./proxy
    ports:
      - ${portProxy}:80
    depends_on:
      - java

volumes:
  mysql_data:
